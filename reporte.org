* Replicación de bases de datos
** Cosas por hacer
   1. [X] Instalar MySQL/MariaDB y PostgreSQL en un equipo que será el servidor
         maestro.
   2. [X] Instalar MySQL/MariaDB y PostgreSQL en otro equipo que será el servidor
      esclavo.
   3. [X] Instalar phpMyAdmin y PGadmin en el servidor maestro para monitorear la
      replicación.
   4. [X] Instalar dos instancias locales de MediaWiki y configurar una para que
      use MySQL/MariaDB y otra para que use PostgreSQL
   5. [X] Verificar el servicio de base de datos maestro y verificar que la
      replicación lleve los datos al servidor esclavo.

El funcionamiento de estos servicios se puede ver en el siguiente diagrama:

[[img/diagrama.png][diagrama]]

* Reporte

*** Integrantes:
    + Galeana Araujo Emiliano
    + Gladin García Angel Iván
    + González Huerta Francisco Javier
    + Vazquez Rizo Paola

** Introducción
   El trabajo se realizó en una máquina física y local, para posteriormente pasar
   todo el trabajo al servidor de Amazon.

   Recordemos que una replicación de base de datos sirve para copiar de forma
   exacta en otra ubicación una instancia de la base de datos. Podemos usarla en
   entornos distribuidos donde una sola base de datos tiene que ser utilizada y
   actualizada en varios lugares.

   Algunos beneficios en la replicación es que mejora la seguridad de los datos,
   mejora el rendimiento (pues los múltiples accesos no saturan a los servidores),
   y hay una mejora en la fiabilidad, pues podemos acceder a los datos si alguna
   máquina tuviese errores.

   Tipos de realización de bases de datos
   Hay 3 principales tipos de replicación de bases de datos


   + Replicación de mezcla: los datos de dos o más bases de datos se combinan en
     una sola base de datos. En primer lugar se envía una copia completa de la
     base de datos. Luego el Sistema de Gestión de Base de Datos va comprobando
     los cambios que van apareciendo en los distintos nodos y a una hora
     programada o a petición los datos se sincronizan. Es sobre todo útil cuando
     cada nodo suele utilizar solo los datos que se actualizan allí pero que por
      circunstancias necesita tener también los datos de los otros sitios.

   + Replicación Instantánea: los datos de un servidor son simplemente copiados a
     otro servidor o a otra base de datos dentro del mismo servidor. Al copiarse
     todo no necesitas un control de cambios. Se suele utilizar cuando los datos
     cambian con  muy poca frecuencia.

   + Replicación Transaccional: primero se envía una copia completa de la base de
     datos y luego se van enviando de forma periódica (o a veces continua) las
     actualizaciones de los datos que cambian. Se utiliza cuando necesitas que
     todos los nodos con todas las instancias de la base de datos tengan los
     mismos datos a los pocos segundos de realizarse un cambio.
   

   Los siguiente es necesario para el correcto funcionamiento del proyecto.
   1. PHP 7.3.14-1
   2. MySQL 8.0.20
   3. apache2 2.4.29
   4. phpMyAdmin
   5. pgAdmin4

** Instalación
   Después de unos problemas técnicos con nuestra instancia de AWS, replicamos el
   proyecto en un servidor que compramos.

   Lo primero en hacer es instalar MySQL

   #+begin_src sh :exports code
   sudo apt-get install mysql-server mysql-client
   #+end_src sh

   Así como apache2

   #+begin_src sh :exports code
   sudo apt-get install apache2 
   #+end_src sh

   MariaDB

   #+begin_src sh :exports code
   sudo apt-get install mariadb-server
   #+end_src sh

   Y phpMySQL

   #+begin_src sh :exports code
   sudo apt-get install php php-mysql libapache2-mod-php php-xml php-mbstring
   #+end_src

   mediaWiki también lo vamos a instalar, pero de una manera distinta.

   #+begin_src sh :exports code
   wget https://releases.wikimedia.org/mediawiki/1.34/mediawiki-1.34.2.tar.gz
   #+end_src sh
   
   Una vez descargado el =.tar.gz=, lo descomprimimos.

   #+begin_src sh :exports code
   tar -xvf mediawiki-1.34.2.tar.gz
   #+end_src

   Procedemos a crear una carpeta en =/var/= para =mediaWiki=, y movemos la 
   carpeta que se descomprimió a la nueva carpeta.

   #+begin_src sh :exports code
   mkdir /var/lib/mediawiki
   mv mediawiki-1.34.2 /var/lib/mediawiki/
   #+end_src
   
   Crearemos la configuració de mysql para =master=. Los cambios hechos se pueden
   leer en la sección de =Configuración=.

   Hacemos una liga para =mediaWiki=.

   #+begin_src sh :exports code
   ln -s /var/lib/mediawiki/ /var/www/html/mediawiki
   #+end_src

   Habilitamos módulos de php con =phpenmod=. Y reiniciamos =apache2=. La última
   línea solo es para checar el estado de =apache2=.

   #+begin_src sh :exports code
   phpenmod mbstring
   phpenmod xml
   systemctl restart apache2
   systemctl status apache2
   #+end_src

   Copiamos ca configuración para =mediaWiki=.

   #+begin_src sh :exports code
   cp /etc/apache2/sites-available/000-default.conf  /etc/apache2/sites-available/mediawiki.conf
   #+end_src

TODO: qué cambios tiene el archivo de arriba

   Por último cargamos la nueva configuración y quitamos la anterior. Reiniciamos
   apache y verificamos.

   #+begin_src sh :exports code
   a2ensite mediawiki.conf 
   a2dissite 000-default.conf 
   systemctl reload apache2
   systemctl status apaeche2
   #+end_src 

TODO: ¿Por qué hay un mediaWiki2?

   Lo siguiente es cargar las credenciales de la base de datos que creamos 
   anteriormente para que =mediaWiki= pueda reconocerlas. El archivo se llama
   =LocalSettings.php= y se encuentra en =/var/www/html/mediaWiki/mediaWiki-1.34.2=.

   Esto implica dar permisos =600= al archivo y cambiar al dueño.

TODO: ¿Para qué necesitamos python?

   Instalaremos python, postgres y unas bibliotecas:

   #+begin_src sh :export code
   apt install -y python3-pip
   apt install build-essential libssl-dev libffi-dev python3-dev
   apt install postgresql postgresql-contrib
   apt install libgmp3-dev libpq-dev libapache2-mod-wsgi-py3
   pyton3 -m pip install wheel
   #+end_src

   Creamos un entorno de python, y ahí
   
   #+begin_src sh :export code
   wget https://ftp.postgresql.org/pub/pgadmin/pgadmin4/v3.4/pip/pgadmin4-3.4-py2.py3-none-any.whl
   #+end_src

   Por último 

   #+begin_src sh :export code
   pip install pgadmin4-1.4-py2.py3-none-any.whl
   #+end_src

   Y habilitamos el modo de servidor:

   #+begin_src sh :export code
   cd environments/my_env/lib/python3.6/site-packages/
   echo "SERVER_MODE = False" >> pgadmin4/config_local.py
   #+end_src
   




   #+begin_src sh :exports code
   sudo vi /etc/mysql/my.cnf
   #+end_src sh

   Una vez guardamos los cambios, necesitamos aplicar los cambios, esto lo 
   podemos hacer con el siguiente comando.

   #+begin_src sh :exports code
   sudo service mysql restart
   #+end_src sh

   Ahora necesitamos acceder a la consola de =MySQL=. Los cambios se pueden leer
   en la sección de =Configuración=.

   #+begin_src sh :exports code
   mysql -u root -p
   #+end_src sh

   Abrimos una nueva ventana para exportar nuestra base de datos. Lo hacemos así
   pues al estar nuestra base bloqueada, queremos que se mantenga de esa manera.

   #+begin_src sh :exports code
   mysqldump -u root -o --opt newdatabase > newdatabase.sql
   #+end_src sh
   
   
*** Sábado 13 de Junio de 2020
    Se instaló PHP, MySQL y apache2 en una máquna que es el servidor maestro y en
    el servidor esclavo. Las siguientes imágenes muestran lo anterior.

    [[./img/php_instalacion.png][php_instalacion.png]]

    [[./img/apache_instalacion.png][apache_instalacion.png]]

    [[./img/Sm.png][Sm.png]]

*** Domingo 14 de Junio de 2020
    Se instaló phpMyAdmin y PGAdmin4 en las mismas máquinas. Las siguientes
    imágenes muestran lo anterior.

    Para este punto solo faltaría realizar la instalación de MediaWiki y terminar
    la configuración.

    [[./img/pgmyadmin4.png][pgmyadmin4.png]]

    [[./img/Phpmyadmin.png][Phpmyadmin.png]]

*** Lunes 15 de Junio de 2020
    Se instaló MediaWiki, tanto en postGres como en MySQL. Ambos corren y se
    pueden monitorear. Solo falta hacer la replicación (La parte importante).

    Otra cosa que faltaría realizar es portar todo al server de Amazon, pues
    recordemos que todo se ha ido realizando en nuestras máquinas físicas.

    Las siguientes imágenes son del funcionamiento de Postgres y MySQL.

    [[./img/mediawikipost.png][mediawikipost.png]]

    [[./img/mediawikimysql.png][mediawikimysql.png]]

*** Sábado 20 de Junio de 2020
    Se subió el proyecto funcional y corre en el servidor de Amazon.

** Configuracion
   
*** Instalación
    En general para cualquier cosa que descarguemos sirve el comando

    #+begin_src sh :exports code
    sudo apt-get install <paquete>
    #+end_src sh

    A excepción de =mediaWiki=, que ya explicamos cómo se descarga.

*** Consola de MySQL

    Lo primero es crear un usuario:

    #+begin_src sh :exports code
    CREATE USER 'mediawiki'@'localhost' IDENTIFIED BY 'alias';
    #+end_src sh
    
    Creamos la base de datos.

    #+begin_src sh :exports code
    CREATE DATABASE mediawiki_db;
    #+end_src

    Concedemos privilegios:

    #+begin_src sh :exports code
    GRANT ALL ON mediawiki_db.* TO 'mediawiki'@'localhost';
    #+end_src
    
   
**** TODO cambiar los datos de arribita

*** Configuración de 'Master'

    En el archivo =my.cnf= buscar lo siguiente =bind-address= y reemplazarla la 
    IP por la IP del servidor.

    Tenemos que descomentar la línea que comienza con =server-id=, y asignar un 
    número, este número puede ser cualquiera, aunque hay ciertas recomendaciones,
    nosotros usaremos el número =1=. quedando la línea de la siguienge manera

    #+begin_src sh :exports code
    server-id            = 1
    #+end_src sh

    Lo siguiente que tenemos que modificar es =log_bin=. Que es de donde 'slave'
    va a copiar todos los cambios registrados en el log. Basta con solo 
    descomentar la línea. 

    Por último tenemos que designar la base de datos que vamos a replicar. Es 
    importante notar que podemos replicar varias bases de datos solamente 
    repitiendo la siguiente línea.

    #+begin_src sh :exports code
    binlog_do_db         = <nombre base de datos>
    #+end_src sh
** Errores frecuentes.
   El mayor error que tuvimos (Que fue nuestra culpa) fue que no recordábamos el
   passphrase para conectarnos, pero revisando nuestras conversaciones, lo
   pudimos recuperar y ya logramos acceder al servidor.

   Otro error que tuvimos fue al momento de hacerlo en nuestra computadora, pues
   las versiones de php y phpMyAdmin tenían conflictos, con un vistazo en
   internet pudimos solucionarlo, aparte de que a algunos de nosotros ya nos
   había ocurrido algo parecido en otra materia.


