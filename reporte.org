* Replicación de bases de datos
** Cosas por hacer
   1. [-] Instalar MySQL/MariaDB y PostgreSQL en un equipo que será el servidor
         maestro.
      1. [X] MySQL
      2. [ ] PostgreSQL
   2. [-] Instalar MySQL/MariaDB y PostgreSQL en otro equipo que será el servidor
      esclavo.
      1. [X] MySQL
      2. [ ] PostgreSQL
   3. [X] Instalar phpMyAdmin y PGadmin en el servidor maestro para monitorear la
      replicación.
   4. [-] Instalar dos instancias locales de MediaWiki y configurar una para que
      use MySQL/MariaDB y otra para que use PostgreSQL
      1. [X] MySQL
      2. [ ] PostgreSQL
   5. [X] Verificar el servicio de base de datos maestro y verificar que la
      replicación lleve los datos al servidor esclavo.

El funcionamiento de estos servicios se puede ver en el siguiente diagrama:

[[img/diagrama.png][diagrama]]

* Reporte

*** Integrantes:
    + Galeana Araujo Emiliano
    + Gladin García Angel Iván
    + Vazquez Rizo Paola

** Introducción
   El trabajo se realizó en una máquina física y local, para posteriormente pasar
   todo el trabajo al servidor de Amazon.

   Recordemos que una replicación de base de datos sirve para copiar de forma
   exacta en otra ubicación una instancia de la base de datos. Podemos usarla en
   entornos distribuidos donde una sola base de datos tiene que ser utilizada y
   actualizada en varios lugares.

   Algunos beneficios en la replicación es que mejora la seguridad de los datos,
   mejora el rendimiento (pues los múltiples accesos no saturan a los servidores),
   y hay una mejora en la fiabilidad, pues podemos acceder a los datos si alguna
   máquina tuviese errores.

   Tipos de realización de bases de datos
   Hay 3 principales tipos de replicación de bases de datos


   + Replicación de mezcla: los datos de dos o más bases de datos se combinan en
     una sola base de datos. En primer lugar se envía una copia completa de la
     base de datos. Luego el Sistema de Gestión de Base de Datos va comprobando
     los cambios que van apareciendo en los distintos nodos y a una hora
     programada o a petición los datos se sincronizan. Es sobre todo útil cuando
     cada nodo suele utilizar solo los datos que se actualizan allí pero que por
      circunstancias necesita tener también los datos de los otros sitios.

   + Replicación Instantánea: los datos de un servidor son simplemente copiados a
     otro servidor o a otra base de datos dentro del mismo servidor. Al copiarse
     todo no necesitas un control de cambios. Se suele utilizar cuando los datos
     cambian con  muy poca frecuencia.

   + Replicación Transaccional: primero se envía una copia completa de la base de
     datos y luego se van enviando de forma periódica (o a veces continua) las
     actualizaciones de los datos que cambian. Se utiliza cuando necesitas que
     todos los nodos con todas las instancias de la base de datos tengan los
     mismos datos a los pocos segundos de realizarse un cambio.
   

   Los siguiente es necesario para el correcto funcionamiento del proyecto.
   1. PHP 7.3.14-1
   2. MySQL 8.0.20
   3. apache2 2.4.29
   4. phpMyAdmin 

** Instalación
   Después de unos problemas técnicos con nuestra instancia de AWS, y conflictos
   en la comunicación del equipo. Replicamos el proyecto en un par de  servidores
   que compramos. Dichos servidores están alojados en [[https://www.digitalocean.com/][Digital Ocean]] y corren 
   sobre =Ubuntu 16.04.6 (LTS) x64=. Necesitamos dos servidores, pues uno hará la
   función de 'Master' y el otro la función de 'Slave'.

   Las direcciones de dichos servidores son las siguientes:
   
   + Master: [104.248.53.119]
   + Slave:  [104.248.120.69]

*** Servidores:

    La conexión a los servidores se hace mediante =ssh= de la siguiente manera:
    
    #+begin_src sh :exports code
    ssh root@<SERVIDOR>
    #+end_src

    Donde =<SERVIDOR>= es alguna dirección de las mencionadas anteriormente.

    La clave para acceder a dichos servidores no la pondremos en el reporte, por
    cuestiones de seguridad, sin embargo, en caso de ser requerida se pueden 
    poner en contacto con algún integrante del equipo para brindarla.

*** Paquetes necesarios

    En esta sección listaremos los paquetes y su manera de instalación.

    Antes de iniciar cualquier cosa, vamos a actualizar.

    #+begin_src sh :exports code
    apt update && apt dist-upgrade
    #+end_src
    
    Lo primero en instalar será MySQL, es importante hacerlo tanto en el servidor
    esclavo, como en el maestro
    
    #+begin_src sh :exports code
    apt-get install -y mysql-server
    #+end_src

    La bandera =-y= es solamente para responder =yes= a cualquier pregunta que se
    nos haga a la hora de la instalación.


    Por cuestiones de tiempo y optimización, optamos por utilizar =Tasakel=, 
    pues ya viene con todo listo para una rápida instalación. De esa manera nos
    evitamos instalar /Apache, MySQL, PHP/ por separado. 
    
    Utilizaremos =Taskel= para instalar =LAMP Stak= con los siguientes comandos.

    #+begin_src sh :exports code
    apt install tasksel
    tasksel install lamp-server
    #+end_src

    Necesitamos =mediaWiki=, el cuál vamos a instalar de la siguiente manera

    #+begin_src sh :exports code
    cd /var/www/html/foo
    sudo curl -O https://releases.wikimedia.org/mediawiki/1.33/mediawiki-1.33.0.tar.gz
    #+end_src

    Para usar phpMyAdmin, necesitamos descargarlo, lo podemos hacer con lo 
    siguiente

    #+begin_src sh :exports code
    apt-get install phpmyadmin php-mbstring php-gettext
    #+end_src    

*** Servidor Maestro

    Necesitamos editar el siguiente archivo. Los cambios se pueden encontrar en 
    la sección de /Configuración/.

    #+begin_src sh :exports code
    vi /etc/mysql/mysql.conf.d/mysqld.cnf
    #+end_src sh

    Una vez editado, procedemos a reiniciar MySQL

    #+begin_src sh :exports code
    service mtysql restart
    #+end_src sh

    Ahora procedemos a acceder a MySQL

    #+begin_src sh :exports code
    mysql -uroot
    #+end_src sh

    Los comandos ingresados en la consola de MySQL, se pueden ver en la sección
    de /Configuración/.

    Hacemos un sanpshot usando  =mysqldump= con el siguiente comando

   #+begin_src sh :exports code
   mysqldump -uroot --all-databases --master-data > masterdump.sql
   #+end_src

   Y se lo mandamos al esclavo

   #+begin_src sh :exports code
   scp masterdump.sql 104.248.120.69:
   #+end_src

*** Servidor Esclavo
    Necesitamos editar el siguiente archivo. Los cambios se pueden encontrar en 
    la sección de /Configuración/.

    #+begin_src sh :exports code
    vi /etc/mysql/mysql.conf.d/mysqld.cnf
    #+end_src sh
    
    Una vez editado, procedemos a reiniciar MySQL

    #+begin_src sh :exports code
    service mtysql restart
    #+end_src sh

    Ahora procedemos a acceder a MySQL

    #+begin_src sh :exports code
    mysql -uroot
    #+end_src sh

    Los comandos ingresados en la consola de MySQL, se pueden ver en la sección
    de /Configuración/.

    Ahora procedemos a restaurar la base de datos del maestro. Y entramos de 
    nuevo a la consola (Ver /Configuración/).

    #+begin_src sh :exports code
    mysql -uroot < masterdump.sql
    mysql -uroot
    #+end_src

*** Virtual Hosts
    
    Vamos a configurar nuestro host de distintas maneras, por lo que lo 
    reemplazamos con

    #+begin_src sh :exports code
    cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/foo.conf
    #+end_src

    Creamos subdirectorios con

    #+begin_src sh :exports code
    mkdir -p /var/www/html/foo/{public_html, logs}
    #+end_src

    Les damos permisos

    #+begin_src sh :exports code
    sudo chmod -R 755 /var/www/html/foo/public_html
    #+end_src

    Deshabilitamos el host anterior y actualizamos =apache= con lo siguiente

    #+begin_src sh :exports code
    sudo a2dissite 000-default.conf
    systemctl reload apache2
    #+end_src

*** MediaWiki
    
    Ver la sección /Paquetes necesarios/ en este mismo apartado para ver el 
    proceso de instalación.

    Una vez instalado, procedemos a descomprimir el paquete.

    #+begin_src sh :exports code
    sudo tar -xvf mediawiki-1.33.0.tar.gz
    #+end_src sh

    Ahora, moveremos el archivo descomprimido =mediawiki-1.33.0= al directorio 
    =mediawiki=.

    #+begin_src sh :exports code
    sudo mv mediawiki-1.33.0/ public_html/mediawiki/
    #+end_src sh

    Como MediaWiki tiene que comunicarse con una base de datos para guardar la
    información, vamos a crear una. (Ver /Configuración de MediaWiki/).

*** phpMyAdmin

    Ver la sección /Paquetes necesarios/ en este mismo apartado para ver el 
    proceso de instalación.
    
    El proceso de instalación, carga la configuración en =/etc/apache2/conf-enabled/=
    Necesitamos habilitar =mbstring= de la siguiente manera. 

    #+begin_src sh :exports code
    sudo phpenmod mbstring
    #+end_src

    Procedemos a reiniciar apache para guardar los cambios.

    #+begin_src sh :exports code
    sudo systemctl restart apache2
    #+end_src

    Ahora queremos configurar una contraseña para un usuario dedicado en =MySQL=
    Las configuraciones se pueden ver en /Configuración phpMyAdmin/. Es 
    importante recalcar que esto debe hacerse tanto en 'Master' como en 'Slave'.

    #+begin_src sh :exports code
    sydo -u mysql-p
    #+end_src
    

*** Verificación
    
    Podemos ver que cada que escribimos en el maestro, se escribe automáticamente
    en el esclavo, esto nos habla de una replicación instantánea.

** Configuracion

*** Instalación
    En general para cualquier cosa que descarguemos sirve el comando

    #+begin_src sh :exports code
    sudo apt-get install <paquete>
    #+end_src sh

    =mediaWiki= se va a instalar con el siguiente comando.
    #+begin_src sh :exports code
    sudo curl -O https://releases.wikimedia.org/mediawiki/1.33/mediawiki-1.33.0.tar.gz    
    #+end_src sh    

*** Configuración de 'Master'

    En el archivo =/etc/mysql/mysql.conf.d/mysqld.cnf= vamos a modificar el 
    =bind-address=, por lo que basta con encontrar dicha línea y escribir lo 
    siguiente.

    #+begin_src sh :exports code
    bind-address          = 104.248.53.119
    #+end_src sh

    En el mismo archivo, también tenemos que descomentar las líneas de
    =server-id= y =log-bin=.

**** Consola de MySQL

     Lo primero es crear un usuario:

     #+begin_src sh :exports code
     create user 'repl'@'%' identified by 'slavepassword';
     #+end_src sh

     El siguiente comando es para crear la replicación

     #+begin_src sh :exports code
     grant replication slave on *.* to 'repl'@'%';
     #+end_src sh
    
     Para probar lo hecho anteriormente
     Creamos la base de datos.

     #+begin_src sh :exports code
     create database pets;
     create database pets.cats (name varchar(20));
     insert into pets.cats values ('fluffy');
     select * from pets.cats;
     exit
     #+end_src

*** Configuración de 'Slave'

    En el archivo =/etc/mysql/mysql.conf.d/mysqld.cnf= vamos a modificar el 
    =bind-address=, por lo que basta con encontrar dicha línea y escribir lo 
    siguiente.
    
    #+begin_src sh :exports code
    bind-address          = 104.248.53.119
    #+end_src sh

    En el mismo archivo, también tenemos que descomentar las líneas de
    =server-id= y =log-bin=. El =server-id= tiene que quedar de la siguiente
    manera.

    #+begin_src sh :exports code
    server-id             = 2
    #+end_src sh    

**** Consola de MySQL
     
     Lo siguiente es para ligar al esclavo con el maestro.

    #+begin_src sh :exports code
    CHANGE MASTER TO
    MASTER_HOST='104.248.53.119',
    MASTER_USER='repl',
    MASTER_PASSWORD='slavepassword';
    exit
    #+end_src

     Con los siguientes comandos vamos a restaurar la base de datos del maestro.

    #+begin_src sh :exports code
    start slave;
    #+end_src
    
    Podemos ver el estado con el siguiente comando

    #+begin_src sh :exports code
    show slave status\G;
    #+end_src
    
    Y verificar que en efecto, la replicación está lista.

*** Configuración de 'MediaWiki'

    Antes de configurar MediaWiki como tal, vamos a crear una base de datos.

    #+begin_src sh :exports code
    sudo mysql -u root -p
    #+end_src sh

    Ahora creamos una base de datos y un usuario. la base de datos llevará por 
    nombre =my_wiki=, el usuario será =media_wiki= y la contraseña no la 
    pondremos, pero en caso de requerirla, de nuevo, se puede contactar a 
    cualquier miembro del equipo.

    #+begin_src sh :exports code
    CREATE DATABASE my_wiki;
    CREATE USER 'media_wiki'@'localhost' IDENTIFIED BY 'password';
    GRANT ALL ON my_wiki.* TO 'media_wiki'@'localhost' IDENTIFIED BY 'password';
    #+end_src sh
    
    Una vez hecho lo anterior, ahora si, procedemos a configurar =mediaWiki=.

    Vamos a ir a la url =foo/mediawiki/= y ahí encontraremos un link con la 
    leyenda: =Please set up the wiki first=, vamos a seleccionar el nombre de la 
    base y la contraseña que definimos anteriormente. Una vez terminada la 
    configuración =mediaWiki= va a crear un archivo (=LocalSettings.php=), el 
    cual contiene las configuraciones de la instalación. 

    Como último paso, vamos a mover el arhivo antes mencionado y le vamos a 
    restringir el acceso de la siguiente manera.

    #+begin_src sh :exports code
    mv LocalSettings.php /var/www/html/foo/public_html/mediawiki
    sudo chmod 700 /var/www/html/example.com/public_html/media/wiki/LocalSettings.php
    #+end_src sh

    La contraseña de =mediaWiki= no la pondremos en este reporte, pero de nuevo,
    de ser requerida, cualquier miembro del equipo puede brindarla.

*** Configuración de 'phpMyAdmin'

    Podermos crear un usuario y una contrseña nuevos, pero vamos a usar los 
    mismos que para la base de datos de =MySQL= vamos a condecer los privilegios
    necesarios y por último, nos salimos del shell de =MySQL=. La cuál se 
    encuentra arriba.
    
    Ahora podemos accesar a la interfaz de web visitando =http://<dominio>/phpmyadmin=

** Ligas de acceso

   Por el momento, por falta de comunicación, solo tenemos una instancia de
   =mediaWiki= con una base de datos, por lo que nos haría falta crearla con
   =postgres=.

*** Servidor Maestro

   + Podemos ver una instancia de =mediaWiki= en [[http://104.248.53.119/mediawiki/][MediaWiki - MySQL]]
   + Podemos ver la instancia de =phpMyAdmin= [[http://104.248.53.119/phpmyadmin/][phpMyAdmin]]

*** Servidor Esclavo
    
   + Podemos ver la instancia de =phpMyAdmin= en [[http://104.248.120.69/phpmyadmin/][phpMyAdmin]]
     
** Certificado SSL

   Parece que necesitamos un nombre de dominio para poder realizar esta parte, 
   sin embargo, suponiendo que lo tenemos, bastaría con realizar los siguientes
   comandos.

   #+begin_src sh :exports code
   apt-get install certbot python-certbot-apache 
   sudo certbot --apache
   #+end_src

** Errores frecuentes.
   El mayor error que tuvimos fue la falta de comunicación, en un inicio, no 
   pensamos que el hecho de que solo una persona tuviera los archivos de 
   configuración nos perjudicaría. Un error que tuvimos (Cuando lo hicimos con 
   AWS). fue que no recordábamos el passphrase para conectarnos.

   Ya trabajando en =Digital Ocean= lo más complicado fue vimos fue intentar 
   realizarlo con =postgres=, pero en la entrega del video ya estará. Otro error
   Otro error que tuvimos fue que al momento de querer realizar una configuración
   , la documentación de =MySQL= dice que hay que editar el siguiente archivo
   =Domain Forwarding=, pero tuvimos problemas con eso y buscando, encontramos en
   un foro que para versiones recientes, había que modificar el siguiente archivo
   =/etc/mysql/mysql.conf.d/mysqld.cnf=, fue de las cosas más problemáticas que
   tuvimos.   

** Bibliografía
   
   + [[https://askubuntu.com/questions/387062/how-to-solve-the-phpmyadmin-not-found-issue-after-upgrading-php-and-apache][problema con phpMyAdmin]]
   + [[https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-16-04][Instalación]]
   + [[https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-on-ubuntu-16-04][instalación de phpMyAdmin]]
   + [[https://www.linode.com/docs/web-servers/lamp/how-to-install-a-lamp-stack-on-ubuntu-18-04/][LAMP Stack]]
   + [[https://www.linode.com/docs//websites/wikis/install-mediawiki-on-ubuntu-1804/][mediaWiki Ubuntu]]
   + [[https://www.youtube.com/watch?v=JXDuVypcHNA][Configuración MySQL]]
